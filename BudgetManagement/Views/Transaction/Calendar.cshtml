<partial name="_SubMenu" model="@ReportPeriodicity.Calendar" />

@{
    ViewData["Title"] = "Calendar Report";
}

<div class="modal" id="modalTransactions" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Today's Transactions</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th id="modalTableDate"></th>
                            <th id="modalTableIncome" class="active"></th>
                            <th id="modalTableExpense" class="pasive"></th>
                        </tr>
                    </thead>
                    <tbody id="modalTableBody"></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div id="calendar"></div>
</div>

@section Scripts{
    <script src="~/lib/fullcalendar/main.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const calendarElement = document.getElementById("calendar");
            const calendar = new FullCalendar.Calendar(calendarElement, {
                dayMaxEventRows: 3,
                initialView: "dayGridMonth",
                events: "/transaction/GetCalendarEvents",
                dateClick: async function(info) {
                    await FetchDayTransactions(info.dateStr);
                }
            });

            calendar.render();
        });


        async function FetchDayTransactions(date) {
            var response = await fetch(`/transaction/FetchCalendarTransactions?date=${date}`,
                {
                    method: "GET",
                    headers: {
                        "Content-Type": "application/json"
                    }
                });

            const json = await response.json();
            buildModal(json, date);

        }

        function buildModal(transactions, date) {
            let incomes = 0;
            let expenses = 0;
            const operationTypeIncome = 1;

            const formatter = new Intl.NumberFormat("en-US", {
                style: "currency",
                currency: "USD"
            });

            const rows = transactions.map(transaction => {
                if (transaction.operationTypeId === operationTypeIncome) {
                    incomes += transaction.amount;
                }
                else {
                    expenses += transaction.amount;
                }

                return `<tr>
                    <td>${transaction.category}</td>
                    <td>${transaction.account}</td>
                    <td class=${transaction.operationTypeId === operationTypeIncome ? "active" : "pasive"}>${formatter.format(transaction.amount)}</td>
                    </tr>`
            });

            $("#modalTableBody").html(rows);
            $("#modalTableDate").html(date);
            $("#modalTableIncome").html(incomes);
            $("#modalTableExpense").html(expenses);

            const modalTransactions = new bootstrap.Modal(document.getElementById("modalTransactions"));
            modalTransactions.show();

        }
    </script>

}